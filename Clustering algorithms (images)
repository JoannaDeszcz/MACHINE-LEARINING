### Importowanie bibliotek
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib.pyplot as plt
from PIL import Image as PILImage 
from IPython.display import Image, display
import numpy as np
from sklearn.cluster import KMeans
from sklearn.cluster import DBSCAN



import warnings 
warnings.filterwarnings('ignore')
	1.1. Wczytanie danych.

from PIL import Image as PILImage 

image = PILImage.open('palm_tree.jpg')

1.2. Wyświetlenie kodów RGB dla każdego piksela.
pixels = np.array(image)
height, width, _ = pixels.shape

for y in range(height):
    for x in range(width):
        r, g, b = pixels[y, x]
        print(f"Piksel ({x}, {y}) - R:{r}, G:{g}, B:{b}")


1.3 Wyświetlenie zdjęcia.
display(image)

	1.4. Kwantyzacja liczby kolorów metodą k-średnich.

pixels_2d = pixels.reshape(-1, 3) 
kmeans = KMeans(n_clusters=6, random_state=0).fit(pixels_2d)
1.5 Wyświetlenie rozmiarów zdjęcia i 3 wymiaru -> inf. nt. kolorów.

print(f"Rozmiar obrazu: {pixels.shape}")
print(f"Liczba kolorów: {len(np.unique(pixels_2d, axis=0))}")

1.6. Konwersja danych z 3D do 2D. Algorytm k-średnich jest przeznaczony do uczenia danych 2D (wierszy danych i kolumn cech), można zmienić kształt za pomocą (w,h,c) ---> (w * h,c)
w, h, c = pixels.shape
image_2d = np.reshape(image, (w * h, c))
	1.7. Zastosowanie metody k-średnich dla liczby skupień równej 6.

kmeans = KMeans(n_clusters=6, random_state=0).fit(image_2d)
labels_2d=kmeans.predict(image_2d)
	1.8. Wyświetlenie etykiet.

print(labels_2d)
	1.9. Wyświetlenie informacji nt. centroidów.

centroidy=kmeans.cluster_centers_

1.10 Stworzenie zmiennej, w której współrzędne centroidów będą zaokrąglone do 0 miejsc po przecinku.

round_centers=np.round(centroidy, 0)
print(centroidy)
	1.11. Stworzenie skwantyzowanego obrazu.

quantized_image = np.zeros_like(image_2d)
for i in range(len(quantized_image)):
    quantized_image[i] = round_centers[labels_2d[i]]

1.12 Wyświetlenie obrazu po kwantyzacji.
quantized_image = np.reshape(quantized_image, (w, h, c)).astype(np.uint8)
plt.figure(figsize=(8, 6))
plt.imshow(quantized_image)
plt.title("Obraz po kwantyzacji")
plt.axis('off')

plt.show()
